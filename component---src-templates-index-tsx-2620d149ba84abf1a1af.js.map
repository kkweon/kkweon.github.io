{"version":3,"file":"component---src-templates-index-tsx-2620d149ba84abf1a1af.js","mappings":"iPAYMA,EAAU,SAACC,GACf,GAAKA,EAAL,KAmBE,OAAO,4BAAP,KAlBA,IAAMC,GAAYC,EAAAA,EAAAA,KAAI,CACpBC,MADoB,QAEpBC,gBAFoB,KAGpBC,SAASC,EAAAA,EAAAA,GAHW,IAIpBC,eAJoB,OAMpB,UAAW,CACTJ,MADS,QAETC,gBAAiBI,EAAAA,MAGrB,OACE,wCAAqBC,GAAIT,EAAMU,MAA/B,IAEGV,EAFH,KADF,MAkBW,SAASW,EAAW,GAKlB,IAJfC,EAIc,EAJdA,MACAC,EAGc,EAHdA,YACAC,EAEc,EAFdA,KACAC,EACc,EADdA,QAEMC,GAAkBd,EAAAA,EAAAA,KAAI,CAC1Be,QAD0B,OAE1BC,eAF0B,gBAG1BC,WAAWb,EAAAA,EAAAA,GAAO,KAEpB,OACE,oCAA0Bc,UAAU,eAClC,uBAAKA,UAAU,oBACb,mBAASC,KAAT,EAAsBX,IAAK,IAA3B,EAA8CY,KAAK,eAErD,uBAAKF,UAAU,oBACb,mBAASC,KAAT,EAAqBX,IAAK,IAA1B,EAAyCY,KAAK,gB,kCCnDhDhB,EAASiB,EAAAA,EAAAA,OAETC,EAAW,UAAc,CAC7BnB,QAASC,EADoB,GAE7BmB,OAF6B,kBAG7BC,aAAcpB,EAHe,GAI7BqB,UAAW,sBAGPC,EAAc,SAAC,GAA4B,IAA1BnB,EAAyB,EAAzBA,GACfoB,GAAc3B,EAAAA,EAAAA,KAAI,CACtBC,MADsB,QAEtBI,eAFsB,OAGtBkB,OAAO,aAHe,KAItBK,WAJsB,KAKtBzB,QAASC,EALa,IAMtByB,WANsB,WAOtB,UAAW,CACT5B,MADS,QAETsB,OAAO,aAFE,KAGTK,WAAYE,EAAAA,MAGhB,OACE,wCAAuBvB,GAAIA,IAD7B,cAcIwB,EAAO,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAC3BC,GAAapC,EAAAA,EAAAA,KAAI,CACrBwB,aAAcpB,EAAO,MAGjBiC,GAAYrC,EAAAA,EAAAA,KAAI,CACpBC,MADoB,OAEpBuB,aAAcpB,EAAO,MAEvB,OACE,mBAAUc,UAAU,QAClB,uBADF,GAEE,sBAFF,GAGE,yBAHF,GAIE,mBAAaX,GAAI,IAAMyB,MAkCd,SAAS,EAAT,GAAmC,IAAvBM,EAAsB,EAAtBA,YACjBC,EAA8BD,EAAtC,MAAeE,EAAuBF,EAAtC,MAAsB5B,EAAgB4B,EAAtC,MAA6B1B,EAAS0B,EAAtC,KACM3B,EAAc6B,EAAAA,GAAAA,EAAAA,IAAuBA,EAAD,GAA1C,WACM3B,GAAW2B,EAAD,GAAhB,WAEA,OACE,yBACE,2BACGD,EAAA,KAAU,gBAAGE,EAAH,cACT,mBACEC,IAAKD,EADP,GAEET,KAAMS,EAAAA,OAFR,KAGER,MAAOQ,EAAAA,YAHT,MAIEP,KAAMO,EAAAA,YAJR,KAKEN,QAASM,EAAKN,aAGlB,mBACEzB,MADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,QAASA,Q,8ECnHZ,IAAMP,EAAN,UACMwB,EAAN","sources":["webpack://gatsby-starter-default/./src/components/Pagination/index.tsx","webpack://gatsby-starter-default/./src/templates/Index.tsx","webpack://gatsby-starter-default/./src/utils/variables/index.ts"],"sourcesContent":["import * as React from 'react'\nimport Link from 'gatsby-link'\nimport { rhythm } from '../../utils'\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from '../../utils/variables'\nimport { css } from 'glamor'\n\ninterface INavLinkProp {\n  test: boolean\n  url: string\n  text: string\n}\n\nconst NavLink = (props: INavLinkProp) => {\n  if (!props.test) {\n    const linkStyle = css({\n      color: 'black',\n      backgroundColor: SECONDARY_COLOR,\n      padding: rhythm(0.5),\n      textDecoration: 'none',\n\n      '&:hover': {\n        color: 'white',\n        backgroundColor: PRIMARY_COLOR,\n      },\n    })\n    return (\n      <Link {...linkStyle} to={props.url}>\n        {' '}\n        {props.text}{' '}\n      </Link>\n    )\n  } else {\n    return <span> </span>\n  }\n}\n\ninterface IPagination {\n  first: boolean\n  last: boolean\n  previousUrl: string\n  nextUrl: string\n}\n\nexport default function Pagination({\n  first,\n  previousUrl,\n  last,\n  nextUrl,\n}: IPagination) {\n  const paginationStyle = css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: rhythm(2),\n  })\n  return (\n    <div {...paginationStyle} className=\"pagination\">\n      <div className=\"pagination__prev\">\n        <NavLink test={first} url={'/' + previousUrl} text=\"Prev Page\" />\n      </div>\n      <div className=\"pagination__next\">\n        <NavLink test={last} url={'/' + nextUrl} text=\"Next Page\" />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport Pagination from '../components/Pagination'\nimport { css } from 'glamor'\nimport glamorous from 'glamorous'\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from '../utils/variables'\nimport Layout from '../components'\nimport Typography from '../utils'\n\nconst rhythm = Typography.rhythm\n\nconst PostLink = glamorous.div({\n  padding: rhythm(1),\n  border: '1px solid black',\n  marginBottom: rhythm(1),\n  boxShadow: '0 3px 3px #696969',\n})\n\nconst ReadMoreBtn = ({ to }: { to: string }) => {\n  const buttonStyle = css({\n    color: 'white',\n    textDecoration: 'none',\n    border: `1px solid ${PRIMARY_COLOR}`,\n    background: PRIMARY_COLOR,\n    padding: rhythm(0.4),\n    transition: 'all 0.2s',\n    '&:hover': {\n      color: 'black',\n      border: `1px solid ${SECONDARY_COLOR}`,\n      background: SECONDARY_COLOR,\n    },\n  })\n  return (\n    <Link {...buttonStyle} to={to}>\n      Read More\n    </Link>\n  )\n}\n\ninterface IPost {\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n}\n\nconst Post = ({ slug, title, date, excerpt }: IPost) => {\n  const titleStyle = css({\n    marginBottom: rhythm(0.2),\n  })\n\n  const dateStyle = css({\n    color: '#999',\n    marginBottom: rhythm(0.5),\n  })\n  return (\n    <PostLink className=\"post\">\n      <h3 {...titleStyle}>{title}</h3>\n      <p {...dateStyle}>{date}</p>\n      <p>{excerpt}</p>\n      <ReadMoreBtn to={'/' + slug} />\n    </PostLink>\n  )\n}\n\nexport interface IPostNode {\n  node: {\n    id: number | string\n    excerpt: string\n\n    fields: {\n      slug: string\n    }\n\n    frontmatter: {\n      title: string\n      date: string\n    }\n  }\n}\n\nexport interface IPathContext {\n  group: IPostNode[]\n  index: number\n  first: boolean\n  last: boolean\n  pageCount: number\n}\n\nexport interface IData {\n  data: IPostNode\n  pageContext: IPathContext\n}\n\nexport default function ({ pageContext }: IData) {\n  const { group, index, first, last } = pageContext\n  const previousUrl = index - 1 == 1 ? '' : (index - 1).toString()\n  const nextUrl = (index + 1).toString()\n\n  return (\n    <Layout>\n      <div>\n        {group.map(({ node }) => (\n          <Post\n            key={node.id}\n            slug={node.fields.slug}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            excerpt={node.excerpt}\n          />\n        ))}\n        <Pagination\n          first={first}\n          previousUrl={previousUrl}\n          last={last}\n          nextUrl={nextUrl}\n        />\n      </div>\n    </Layout>\n  )\n}\n","export const PRIMARY_COLOR = '#0381ff'\nexport const SECONDARY_COLOR = '#ffe203'\nexport const THIRD_COLOR = '#ff0342'\n"],"names":["NavLink","props","linkStyle","css","color","backgroundColor","padding","rhythm","textDecoration","PRIMARY_COLOR","to","url","Pagination","first","previousUrl","last","nextUrl","paginationStyle","display","justifyContent","marginTop","className","test","text","Typography","PostLink","border","marginBottom","boxShadow","ReadMoreBtn","buttonStyle","background","transition","SECONDARY_COLOR","Post","slug","title","date","excerpt","titleStyle","dateStyle","pageContext","group","index","node","key"],"sourceRoot":""}