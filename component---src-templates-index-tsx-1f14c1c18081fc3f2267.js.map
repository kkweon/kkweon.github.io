{"version":3,"file":"component---src-templates-index-tsx-1f14c1c18081fc3f2267.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Pagination/index.tsx","webpack://gatsby-starter-default/./src/templates/Index.tsx","webpack://gatsby-starter-default/./src/utils/variables/index.ts"],"sourcesContent":["import * as React from 'react'\nimport { rhythm } from '../../utils'\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from '../../utils/variables'\nimport { css } from 'glamor'\nimport { Link } from 'gatsby'\n\ninterface INavLinkProp {\n  test: boolean\n  url: string\n  text: string\n}\n\nconst NavLink = (props: INavLinkProp) => {\n  if (!props.test) {\n    const linkStyle = css({\n      color: 'black',\n      backgroundColor: SECONDARY_COLOR,\n      padding: rhythm(0.5),\n      textDecoration: 'none',\n\n      '&:hover': {\n        color: 'white',\n        backgroundColor: PRIMARY_COLOR,\n      },\n    })\n    return (\n      <Link {...linkStyle} to={props.url}>\n        {' '}\n        {props.text}{' '}\n      </Link>\n    )\n  } else {\n    return <span> </span>\n  }\n}\n\ninterface IPagination {\n  first: boolean\n  last: boolean\n  previousUrl: string\n  nextUrl: string\n}\n\nexport default function Pagination({\n  first,\n  previousUrl,\n  last,\n  nextUrl,\n}: IPagination) {\n  const paginationStyle = css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: rhythm(2),\n  })\n  return (\n    <div {...paginationStyle} className=\"pagination\">\n      <div className=\"pagination__prev\">\n        <NavLink test={first} url={'/' + previousUrl} text=\"Prev Page\" />\n      </div>\n      <div className=\"pagination__next\">\n        <NavLink test={last} url={'/' + nextUrl} text=\"Next Page\" />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Pagination from '../components/Pagination'\nimport { css } from 'glamor'\nimport glamorous from 'glamorous'\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from '../utils/variables'\nimport Layout from '../components'\nimport Typography from '../utils'\nimport { Link } from 'gatsby'\n\nconst rhythm = Typography.rhythm\n\nconst PostLink = glamorous.div({\n  padding: rhythm(1),\n  border: '1px solid black',\n  marginBottom: rhythm(1),\n  boxShadow: '0 3px 3px #696969',\n})\n\nconst ReadMoreBtn = ({ to }: { to: string }) => {\n  const buttonStyle = css({\n    color: 'white',\n    textDecoration: 'none',\n    border: `1px solid ${PRIMARY_COLOR}`,\n    background: PRIMARY_COLOR,\n    padding: rhythm(0.4),\n    transition: 'all 0.2s',\n    '&:hover': {\n      color: 'black',\n      border: `1px solid ${SECONDARY_COLOR}`,\n      background: SECONDARY_COLOR,\n    },\n  })\n  return (\n    <Link {...buttonStyle} to={to}>\n      Read More\n    </Link>\n  )\n}\n\ninterface IPost {\n  slug: string\n  title: string\n  date: string\n  excerpt: string\n}\n\nconst Post = ({ slug, title, date, excerpt }: IPost) => {\n  const titleStyle = css({\n    marginBottom: rhythm(0.2),\n  })\n\n  const dateStyle = css({\n    color: '#999',\n    marginBottom: rhythm(0.5),\n  })\n  return (\n    <PostLink className=\"post\">\n      <h3 {...titleStyle}>{title}</h3>\n      <p {...dateStyle}>{date}</p>\n      <p>{excerpt}</p>\n      <ReadMoreBtn to={'/' + slug} />\n    </PostLink>\n  )\n}\n\nexport interface IPostNode {\n  node: {\n    id: number | string\n    excerpt: string\n\n    fields: {\n      slug: string\n    }\n\n    frontmatter: {\n      title: string\n      date: string\n    }\n  }\n}\n\nexport interface IPathContext {\n  group: IPostNode[]\n  index: number\n  first: boolean\n  last: boolean\n  pageCount: number\n}\n\nexport interface IData {\n  data: IPostNode\n  pageContext: IPathContext\n}\n\nexport default function ({ pageContext }: IData) {\n  const { group, index, first, last } = pageContext\n  const previousUrl = index - 1 == 1 ? '' : (index - 1).toString()\n  const nextUrl = (index + 1).toString()\n\n  return (\n    <Layout>\n      <div>\n        {group.map(({ node }) => (\n          <Post\n            key={node.id}\n            slug={node.fields.slug}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            excerpt={node.excerpt}\n          />\n        ))}\n        <Pagination\n          first={first}\n          previousUrl={previousUrl}\n          last={last}\n          nextUrl={nextUrl}\n        />\n      </div>\n    </Layout>\n  )\n}\n","export const PRIMARY_COLOR = '#0381ff'\nexport const SECONDARY_COLOR = '#ffe203'\nexport const THIRD_COLOR = '#ff0342'\n"],"names":["NavLink","props","test","Glamor","createElement","linkStyle","css","color","backgroundColor","SECONDARY_COLOR","padding","rhythm","textDecoration","PRIMARY_COLOR","Link","_extends","to","url","text","Pagination","_ref","first","previousUrl","last","nextUrl","paginationStyle","display","justifyContent","marginTop","className","Typography","PostLink","glamorous","div","border","marginBottom","boxShadow","ReadMoreBtn","buttonStyle","background","transition","Post","_ref2","slug","title","date","excerpt","titleStyle","dateStyle","_ref3","pageContext","group","index","toString","Layout","map","_ref4","node","key","id","fields","frontmatter"],"sourceRoot":""}