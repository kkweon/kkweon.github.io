{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/webpack-typescript-nodemon-and-nodejs","result":{"data":{"markdownRemark":{"html":"<p>This post is to describe how to use Webpack, Typescript, and Nodemon with Node.js.</p>\n<h2>Why Webpack?</h2>\n<p>Webpack bundles all JavaScript into a single file. It works great for bundling front end applications, but you can also use that with Node.js application.\nIt produces a single js file and other HTML/CSS asset files. With sourcemaps, there is no problem in debugging the file.\nIt works great because if I am using typescript, it has to be compiled into JavaScript, preferrably in a separate directory such as <code class=\"language-text\">/dist</code> or <code class=\"language-text\">/build</code>. Since TypeScript does not bundle into one js file (unless you use <code class=\"language-text\">systemjs</code>), there will be so many JavaScript files created, but you don't have to care because the source code is in TypeScript anyway. But, I believe there is no performance gain in bundling into a single file, but it's much portable.</p>\n<h2>Why Typescript?</h2>\n<p>TypeScript is so awesome. It's the future of JavaScript. One caveat is that it needs more setups. For example, you will need to install</p>\n<ul>\n<li>typescript</li>\n<li>tslint</li>\n<li>ts-node</li>\n<li>awesome-typescript-loader</li>\n</ul>\n<p>and more such as typescript-formatter.</p>\n<h2>Why Nodemon?</h2>\n<p>Nodemon is almost required for every express project.</p>\n<blockquote>\n<p>Monitor for any changes in your node.js application and automatically restart the server - perfect for development <a href=\"http://nodemon.io/\">http://nodemon.io/</a></p>\n</blockquote>\n<h2>How to make it work together?</h2>\n<p>These tools are so powerful that I lost how to set up because there would be so many ways of doing it.\nFor example, <code class=\"language-text\">tsc</code> will compile <code class=\"language-text\">**/*.ts</code> to <code class=\"language-text\">./dist/**/*.js</code>. But what about HTML/CSS Files?</p>\n<p>If you let webpack do it, you have to be careful when using native node modules because the default webpack config will try to bundle as it would run on browsers. So, here is how I did it.</p>\n<p>It's same as normal ts project, but <code class=\"language-text\">target: &quot;node&quot;</code> and <code class=\"language-text\">file-loader</code> for HTML files, and then I import <code class=\"language-text\">html</code> files in source file, such that it'll be copied during webpack build.</p>\n<p>Here's the entire <code class=\"language-text\">webpack.config.ts</code> Note that I used <code class=\"language-text\">.ts</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> webpack <span class=\"token keyword\">from</span> <span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config<span class=\"token operator\">:</span> webpack<span class=\"token punctuation\">.</span>Configuration <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  devtool<span class=\"token operator\">:</span> <span class=\"token string\">\"source-map\"</span><span class=\"token punctuation\">,</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    server<span class=\"token operator\">:</span> <span class=\"token string\">\"./src/index.ts\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token keyword\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.tsx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token string\">\"awesome-typescript-loader\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.html$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            loader<span class=\"token operator\">:</span> <span class=\"token string\">\"file-loader\"</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              publicPath<span class=\"token operator\">:</span> <span class=\"token string\">\"dist/\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"[name].js\"</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".tsx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".jsx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p>and then how to watch? After trying gulpfile, nodmeon.json, and ..., I settled down using the following NPM scripts.\n<a href=\"https://www.npmjs.com/package/npm-run-all\">npm-run-all</a> helps to run webpack and nodemon in parallel. Also it's cross-platform.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  # Mostly for development\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"PORT=4000 yarn npm-run-all --parallel watch:server watch:build\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"watch:build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --watch\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"watch:server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon \\\"./dist/server.js\\\" --watch \\\"./dist\\\"\"</span><span class=\"token punctuation\">,</span>\n\n  # Mostly for production\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn clean &amp;&amp; webpack --optimize-minimize\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node dist/server.js\"</span><span class=\"token punctuation\">,</span>\n\n  # Cleaning\n  <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf dist\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>","excerpt":"This post is to describe how to use Webpack, Typescript, and Nodemon with Node.js. Why Webpack? Webpack bundles all JavaScript into a single…","frontmatter":{"date":"February 07, 2018","title":"Webpack, Typescript, Nodemon, and Node.js","keywords":"Webpack, Typescript, Nodemon","description":null},"fields":{"slug":"posts/webpack-typescript-nodemon-and-nodejs"}}},"pageContext":{"slug":"posts/webpack-typescript-nodemon-and-nodejs"}},"staticQueryHashes":[]}